name: Deploy to production
on:
  push:
    branches: [master, dev]

env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  backend-docker-image:
    name: Build and push backend image
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.docker_username }}
          password: ${{ env.docker_password }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: danielbahrami/fortune-cookie-backend
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  frontend-docker-image:
    name: Build and push frontend image
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.docker_username }}
          password: ${{ env.docker_password }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: danielbahrami/fortune-cookie-frontend
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  check-out:
    name: Check out repo
    runs-on: ubuntu-latest
    needs:
      - frontend-docker-image
      - backend-docker-image
    steps:
      - uses: actions/checkout@v2
      - name: Upload frontend
        uses: actions/upload-artifact@v2
        with:
          name: deployments
          path: ./deployment

  deploy-to-kubernetes:
    name: Deploy to Kubernetes
    runs-on: self-hosted
    needs: check-out
    steps:
      - name: Download deployments
        uses: actions/download-artifact@v2
        with:
          name: deployments
          path: .
      - name: Apply deployments
        run: |
          kubectl apply -f .

  frontend-connection-test:
    name: Frontend connection test
    runs-on: self-hosted
    needs: deploy-to-kubernetes
    steps:
      - name: Download deployments
        uses: actions/download-artifact@v2
        with:
          name: deployments
          path: .
      - name: Get the IP
        run: echo "DEV_IP=$(kubectl get nodes -o wide | awk 'FNR == 2 {print $7}')" >> $GITHUB_ENV
      - name: Echo the IP
        run: echo "${{ env.DEV_IP }}"
      - name: Get the port
        run: echo "DEV_PORT=$(kubectl get services -o wide | awk 'FNR == 4 {print $5}')" >> $GITHUB_ENV
      - name: Remove first and 3rd part
        run: bash "str={{ env.DEV_PORT }}; port=${str#*:}; port=${port%%/*};" >> $GITHUB_ENV
        env:
          DEV_PORT: "${{ env.DEV_PORT }}"
      - name: Echo the port
        run: echo "${{ env.DEV_PORT }}"
      - name: Test if its running
        run: curl "${{ env.DEV_IP }}":"${{ env.DEV_PORT }}"/
      - name: Post
        run: sh ~/tests/frontend-connection-test.sh
        env:
          COMMIT_SHA: "${{ github.sha }}"
          DEV_IP: "${{ env.DEV_IP }}"
          DEV_PORT: "${{ env.DEV_PORT }}"
